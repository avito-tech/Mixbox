#if defined(MIXBOX_ENABLE_FRAMEWORK_IN_APP_SERVICES) && defined(MIXBOX_DISABLE_FRAMEWORK_IN_APP_SERVICES)
#error "InAppServices is marked as both enabled and disabled, choose one of the flags"
#elif defined(MIXBOX_DISABLE_FRAMEWORK_IN_APP_SERVICES) || (!defined(MIXBOX_ENABLE_ALL_FRAMEWORKS) && !defined(MIXBOX_ENABLE_FRAMEWORK_IN_APP_SERVICES))
// The compilation is disabled
#else

//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@import UIKit;

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSString, TIKeyboardCandidateResultSet, TIKeyboardInputManagerState, TIKeyboardInputManagerStub, TIKeyboardLayout, TIKeyboardState, TIKeyboardTouchEvent, TISmartPunctuationController, UIAlertView, UIAutocorrectInlinePrompt, UIDelayedAction, UIKeyboardAutocorrectionController, UIKeyboardLayout, UIKeyboardScheduledTask, UIKeyboardTaskQueue, UILexicon, UIPhysicalKeyboardEvent, UITextInputArrowKeyHistory, UITextInputTraits, UITextSelectionView, _UIActionWhenIdle, _UIKeyboardFeedbackGenerator, _UIKeyboardTextSelectionController;

typedef void (^CDUnknownBlockType)(void);

@interface UIKeyboardImpl : UIView
{
    id <UIKeyInput> m_delegate;
    UIKeyboardTaskQueue *m_taskQueue;
    CDUnknownBlockType m_externalTask;
    TIKeyboardState *m_keyboardState;
    TIKeyboardInputManagerState *m_inputManagerState;
    _Bool m_keyboardDelegateStateNeedsRefresh;
    UIView *m_languageIndicator;
    NSString *m_previousInputString;
    UIKeyboardAutocorrectionController *m_autocorrectionController;
    UIAutocorrectInlinePrompt *m_autocorrectPrompt;
    TIKeyboardCandidateResultSet *m_candidateResultSet;
    id m_candidateList;
    UIView *m_markedTextOverlay;
    id m_geometryDelegate;
    UIKeyboardLayout *m_layout;
    NSMutableDictionary *m_keyedLayouts;
    UIKeyboardScheduledTask *m_autoDeleteTask;
    unsigned int m_autoDeleteCount;
    double m_autoDeleteLastDelete;
    double m_autoDeleteInterval;
    unsigned int m_autoDeleteShiftCharacter;
    double m_autoDeleteCurrentForceMultipler;
    double m_autoDeleteCurrentForce;
    _Bool m_autoDeleteUseForce;
    UIDelayedAction *m_longPressAction;
    long long m_originalOrientation;
    struct CGPoint m_inputPoint;
    int m_changeCount;
    double m_changeTime;
    id m_changedDelegate;
    struct __CFRunLoopObserver *m_observer;
    _Bool m_hasOutstandingObserverCallbackTask;
    unsigned long long m_textInputChangingCount;
    _Bool m_textInputChangingText;
    _Bool m_textInputChangingDirection;
    _Bool m_textInputChangesIgnored;
    _Bool m_insideKeyInputDelegateCall;
    _Bool m_disableSyncTextChanged;
    UITextInputTraits *m_defaultTraits;
    UITextInputTraits *m_traits;
    int m_returnKeyState;
    long long m_currentDirection;
    UILexicon *m_recentInputs;
    _Bool m_autoDeleteOK;
    _Bool m_autocapitalizationPreference;
    _Bool m_autocorrectionPreference;
    _Bool m_autoshift;
    _Bool m_caretShowingNow;
    _Bool m_changeNotificationDisabled;
    _Bool m_correctionLearningAllowed;
    _Bool m_delegateIsSMSTextView;
    _Bool m_delegateRequiresKeyEvents;
    _Bool m_doubleSpacePeriodWasAppliedInCurrentContext;
    _Bool m_doubleSpacePeriodPreference;
    _Bool m_hardwareKeyboardAttached;
    _Bool m_inDealloc;
    _Bool m_initializationDone;
    _Bool m_performanceLoggingEnabled;
    _Bool m_selecting;
    _Bool m_shift;
    _Bool m_shiftLocked;
    _Bool m_shiftLockedEnabled;
    _Bool m_settingShift;
    _Bool m_suggestionsShownForCurrentDeletion;
    _Bool m_originalShouldSkipCandidateSelection;
    _Bool m_updatingPreferences;
    _Bool m_suppressGeometryChangeNotifications;
    _Bool m_acceptingCandidate;
    _Bool m_didAutomaticallyInsertSpace;
    _Bool m_didSyncDocumentStateToInputDelegate;
    _Bool m_userChangedSelection;
    _Bool m_shouldChargeKeys;
    _Bool m_longPress;
    _Bool m_replacingWord;
    _Bool m_shiftNeedsUpdate;
    _Bool m_shiftPreventAutoshift;
    _Bool m_shiftHeldDownNeedsUpdated;
    _Bool m_delegateAdoptsTextInput;
    _Bool m_delegateAdoptsTextInputPrivate;
    _Bool m_delegateAdoptsWebTextInputPrivate;
    _Bool m_delegateAdoptsKeyboardInput;
    _Bool m_delegateAdoptsWKInteraction;
    _Bool m_delegateAdoptsKeyInputPrivate;
    _Bool m_clientVariantSupportEnabled;
    _Bool m_clientVariantSupportEnabledEver;
    NSMutableArray *m_keyplaneNamesPreviousDelegate;
    NSMutableArray *m_keyplaneNamesCurrentDelegate;
    UITextInputArrowKeyHistory *m_arrowKeyHistory;
    _Bool m_isRotating;
    _Bool m_preRotateShift;
    _Bool m_preRotateShiftLocked;
    _Bool m_showInputModeIndicator;
    _Bool m_suppressUpdateCandidateView;
    _Bool m_shouldUpdateCacheOnInputModesChange;
    _Bool m_rivenCenterFilled;
    double m_splitProgress;
    _Bool m_needsCandidates;
    _Bool m_shouldSkipCandidateGeneration;
    _Bool m_updateLayoutOnShowKeyboard;
    _Bool m_receivedCandidatesInCurrentInputMode;
    int _currentAlertReason;
    _UIKeyboardFeedbackGenerator *m_feedbackGenerator;
    _Bool m_canUpdateIdleTimer;
    _Bool m_scrolling;
    _Bool m_hasInputOnAcceptCandidate;
    _Bool m_maximizing;
    _Bool m_usesAutoShiftFor3PK;
    unsigned long long m_previousSpaceKeyBehavior;
    unsigned long long m_previousReturnKeyBehavior;
    _Bool m_usesCandidateSelection;
    _Bool m_UsedCandidateSelection;
    _Bool m_updatingLayout;
    _Bool m_suppressUpdateLayout;
    _Bool m_animateUpdateBars;
    _Bool m_needsToRecomputeDesirableModes;
    _Bool m_isCapsLocked;
    UITextInputTraits *m_traitsForPreviousDelegate;
    UIDelayedAction *m_detachHardwareKeyboardAction;
    UIView *m_capsLockSign;
    _Bool m_didAutomaticallyInsertSpaceBeforeChangingInputMode;
    _Bool m_disableSmartInsertDelete;
    int m_predictionType;
    _Bool m_repeatDeleteFromHardwareKeyboard;
    UIDelayedAction *m_disablePredictionViewTimer;
    double m_lastDisablePredictionViewTime;
    NSMutableDictionary *m_autofillGroup;
    _Bool m_delegateNeedsAutofill;
    _Bool m_cachedNeedAutofill;
    _Bool m_isAutofilling;
    long long m_pendingAutofillIndex;
    _Bool m_showsCandidateBar;
    _Bool m_showsCandidateInline;
    _Bool committingCandidate;
    _Bool geometryIsChanging;
    _Bool m_softwareKeyboardShownByTouch;
    _Bool _forceEnablePredictionView;
    _Bool _handlingKeyCommandFromHardwareKeyboard;
    TISmartPunctuationController *m_smartPunctuationController;
    TIKeyboardTouchEvent *m_touchEventWaitingForKeyInputEvent;
    _UIActionWhenIdle *m_delayedCandidateRequest;
    _UIActionWhenIdle *m_deferredDidSetDelegateAction;
    UIPhysicalKeyboardEvent *m_hardwareRepeatEvent;
    UIKeyboardScheduledTask *m_hardwareRepeatTask;
    /*UIAlertView **/ id keyboardAlertView;
    _UIKeyboardTextSelectionController *_textSelectionController;
    unsigned long long _requestedInteractionModel;
    NSDictionary *_candidateRequestInfo;
    UIKeyboardScheduledTask *_autocorrectPromptTask;
}

+ (void)hardwareKeyboardAvailabilityChanged;
+ (id)uniqueNumberPadInputModesFromInputModes:(id)arg1 forKeyboardType:(long long)arg2;
+ (Class)layoutClassForInputMode:(id)arg1 keyboardType:(long long)arg2 screenTraits:(id)arg3;
+ (struct CGPoint)persistentOffset;
+ (struct CGPoint)normalizedPersistentOffsetIgnoringState;
+ (struct CGPoint)normalizedPersistentOffset;
+ (void)setPersistentOffset:(struct CGPoint)arg1;
+ (void)suppressSetPersistentOffset:(_Bool)arg1;
+ (void)setPersistentSplitProgress:(double)arg1;
+ (double)splitProgress;
+ (double)persistentSplitProgress;
+ (double)keyboardWidthForScreen:(id)arg1 withOrientation:(long long)arg2;
+ (_Bool)supportsSplit;
+ (_Bool)isSplit;
+ (_Bool)rivenTranslationPreference;
+ (_Bool)rivenPreference;
+ (_Bool)rivenInstalled;
+ (void)refreshRivenStateWithTraits:(id)arg1 isKeyboard:(_Bool)arg2;
+ (_Bool)showsGlobeAndDictationKeysExternallyForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (_Bool)showsGlobeAndDictationKeysExternallyForInterfaceOrientation:(long long)arg1;
+ (_Bool)shouldMergeAssistantBarWithKeyboardLayout;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1;
+ (double)additionalInstanceHeight;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1 hasInputView:(_Bool)arg2;
+ (double)topMarginForInterfaceOrientation:(long long)arg1;
+ (id)normalizedInputModesFromPreference;
+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;
+ (_Bool)keyboardOrientation:(long long)arg1 isEquivalentToOrientation:(long long)arg2;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1 ignoreInputView:(_Bool)arg2;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;
+ (struct UIEdgeInsets)deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (struct UIEdgeInsets)deviceSpecificPaddingForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (Class)layoutClassForCurrentInputMode;
+ (_Bool)isActivatingForeground;
+ (void)switchControlStatusDidChange:(id)arg1;
+ (void)applicationDidReceiveMemoryWarning:(id)arg1;
+ (void)applicationWillEnterForeground:(id)arg1;
+ (void)applicationDidEnterBackground:(id)arg1;
+ (void)applicationDidBecomeActive:(id)arg1;
+ (void)applicationWillResignActive:(id)arg1;
+ (void)applicationWillSuspend:(id)arg1;
+ (void)purgeImageCache;
+ (void)releaseSharedInstance;
+ (id)activeInstance;
+ (UIKeyboardImpl *)sharedInstance;
+ (void)sendPerformanceNotification:(id)arg1 userInfo:(id)arg2;
+ (void)sendPerformanceNotification:(id)arg1;
+ (void)markElapsed:(id)arg1;
+ (void)markPerformance:(id)arg1;
+ (void)setParentTestForProfiling:(id)arg1;
+ (void)_clearHardwareKeyboardMinimizationPreference;
+ (id)keyboardScreen;
+ (id)keyboardWindow;
@property(nonatomic) _Bool handlingKeyCommandFromHardwareKeyboard; // @synthesize handlingKeyCommandFromHardwareKeyboard=_handlingKeyCommandFromHardwareKeyboard;
@property(retain, nonatomic) UIKeyboardScheduledTask *autocorrectPromptTask; // @synthesize autocorrectPromptTask=_autocorrectPromptTask;
@property(retain, nonatomic) NSDictionary *candidateRequestInfo; // @synthesize candidateRequestInfo=_candidateRequestInfo;
@property(nonatomic) unsigned long long requestedInteractionModel; // @synthesize requestedInteractionModel=_requestedInteractionModel;
@property(retain, nonatomic) _UIKeyboardTextSelectionController *textSelectionController; // @synthesize textSelectionController=_textSelectionController;
@property(nonatomic) _Bool forceEnablePredictionView; // @synthesize forceEnablePredictionView=_forceEnablePredictionView;
@property(retain, nonatomic) _UIKeyboardFeedbackGenerator *feedbackGenerator; // @synthesize feedbackGenerator=m_feedbackGenerator;
@property(retain, nonatomic) NSMutableDictionary *autofillGroup; // @synthesize autofillGroup=m_autofillGroup;
@property(nonatomic) _Bool animateUpdateBars; // @synthesize animateUpdateBars=m_animateUpdateBars;
@property(nonatomic) _Bool suppressUpdateLayout; // @synthesize suppressUpdateLayout=m_suppressUpdateLayout;
@property(nonatomic) _Bool softwareKeyboardShownByTouch; // @synthesize softwareKeyboardShownByTouch=m_softwareKeyboardShownByTouch;
@property(nonatomic) _Bool disableSmartInsertDelete; // @synthesize disableSmartInsertDelete=m_disableSmartInsertDelete;
@property(nonatomic) _Bool geometryIsChanging; // @synthesize geometryIsChanging;
@property(nonatomic) _Bool committingCandidate; // @synthesize committingCandidate;
@property(retain, nonatomic)/*UIAlertView **/ id keyboardAlertView; // @synthesize keyboardAlertView;
@property(nonatomic) _Bool showsCandidateInline; // @synthesize showsCandidateInline=m_showsCandidateInline;
@property(nonatomic) _Bool receivedCandidatesInCurrentInputMode; // @synthesize receivedCandidatesInCurrentInputMode=m_receivedCandidatesInCurrentInputMode;
@property(nonatomic) _Bool showsCandidateBar; // @synthesize showsCandidateBar=m_showsCandidateBar;
@property(nonatomic) _Bool showInputModeIndicator; // @synthesize showInputModeIndicator=m_showInputModeIndicator;
@property(retain, nonatomic) UIKeyboardScheduledTask *hardwareRepeatTask; // @synthesize hardwareRepeatTask=m_hardwareRepeatTask;
@property(retain, nonatomic) UIPhysicalKeyboardEvent *hardwareRepeatEvent; // @synthesize hardwareRepeatEvent=m_hardwareRepeatEvent;
@property(retain, nonatomic) id changedDelegate; // @synthesize changedDelegate=m_changedDelegate;
@property(retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction; // @synthesize deferredDidSetDelegateAction=m_deferredDidSetDelegateAction;
@property(retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest; // @synthesize delayedCandidateRequest=m_delayedCandidateRequest;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent; // @synthesize touchEventWaitingForKeyInputEvent=m_touchEventWaitingForKeyInputEvent;
@property(readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController; // @synthesize autocorrectionController=m_autocorrectionController;
@property(retain, nonatomic) TIKeyboardInputManagerState *inputManagerState; // @synthesize inputManagerState=m_inputManagerState;
@property(copy, nonatomic) CDUnknownBlockType externalTask; // @synthesize externalTask=m_externalTask;
@property(nonatomic) id geometryDelegate; // @synthesize geometryDelegate=m_geometryDelegate;
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory; // @synthesize arrowKeyHistory=m_arrowKeyHistory;
@property(nonatomic) _Bool canUpdateIdleTimer; // @synthesize canUpdateIdleTimer=m_canUpdateIdleTimer;
- (void)performSendCurrentLocation;
- (id)responderForSendCurrentLocation;
- (void)trackUsageForCandidateAcceptedAction:(id)arg1;
- (void)trackUsageForPromptedCorrection:(id)arg1 inputString:(id)arg2 previousPrompt:(id)arg3;
- (void)trackUsageForAcceptedAutocorrection:(id)arg1 promptWasShowing:(_Bool)arg2;
- (_Bool)isAutoFillMode;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(/*struct __GSEvent*/void *)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)canHandleKeyHitTest;
- (void)updateNoContentViews;
- (id)dynamicCaretList;
- (void)clearSelection;
- (_Bool)caretVisible;
- (_Bool)caretBlinks;
- (void)setCaretVisible:(_Bool)arg1;
- (void)setCaretBlinks:(_Bool)arg1;
- (void)startCaretBlinkIfNeeded;
- (_Bool)canHandleEvent:(id)arg1;
- (void)_moveWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)showKeyboardIfNeeded;
- (void)ejectKeyDown;
- (void)toggleSoftwareKeyboard;
- (void)completeHandleKeyEvent:(id)arg1;
- (void)handleKeyWithString:(id)arg1 forKeyEvent:(id)arg2 executionContext:(id)arg3;
- (void)handleModifiersChangeForKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)handleKeyEvent:(id)arg1;
- (void)_handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;
- (void)_remapKeyEvent:(id)arg1 withKeyEventMap:(id)arg2;
- (void)_handleWebKeyEvent:(id)arg1 withInputString:(id)arg2 executionContext:(id)arg3;
- (void)_handleWebKeyEvent:(id)arg1 withIndex:(unsigned long long)arg2 inInputString:(id)arg3 executionContext:(id)arg4;
- (void)_handleWebKeyEvent:(id)arg1 withEventType:(int)arg2 withInputString:(id)arg3 withInputStringIgnoringModifiers:(id)arg4 executionContext:(id)arg5;
- (void)updateKeyboardEventsLagging:(id)arg1;
- (_Bool)isValidKeyInput:(id)arg1;
- (void)cancelAllKeyEvents;
- (void)dismissKeyboard;
@property(nonatomic, getter=isInHardwareKeyboardMode) _Bool inHardwareKeyboardMode;
- (void)showKeyboard;
- (void)hideKeyboard;
- (void)firstHardwareAutoRepeatWithExecutionContext:(id)arg1;
- (void)hardwareKeyboardAvailabilityChanged;
- (void)detachHardwareKeyboard;
- (void)clearDetachHardwareKeyboardAction;
- (void)updateHardwareKeyboardLayout;
- (int)changeCount;
- (void)updateChangeTimeAndIncrementCount;
- (void)clearChangeTimeAndCount;
- (void)clearTimers;
- (_Bool)isLongPress;
- (void)longPressAction;
- (void)longPressAction:(id)arg1;
- (void)handleDelayedActionLongPress:(id)arg1;
- (double)shouldExtendLongPressAction:(id)arg1;
- (void)clearLongPressTimer;
- (void)touchLongPressTimer;
- (void)touchLongPressTimerWithDelay:(double)arg1;
- (void)touchLongPressTimerWithDelay:(double)arg1 userInfo:(id)arg2;
- (void)stopAutoDelete;
- (void)adjustAutoDeleteTimerForForce:(double)arg1;
- (void)startAutoDeleteTimerForForce:(double)arg1;
- (double)timeoutForCurrentForce;
- (double)scaleCurrentForceFrom:(double)arg1 to:(double)arg2;
- (double)convertForceToGrams:(double)arg1;
- (void)startAutoDeleteTimer;
- (void)completeHandleAutoDelete;
- (void)handleAutoDeleteWithExecutionContext:(id)arg1;
- (void)touchAutoDeleteTimerWithThreshold:(double)arg1 adjustForPartialCompletion:(_Bool)arg2;
- (void)clearAutoDeleteTimer;
- (id)generateAutocorrectionListForSelectedText;
- (id)generateAutocorrectionReplacements:(id)arg1;
- (void)generateCandidatesFromReplacements;
- (id)replacementsFromSelectedText;
- (void)generateCandidatesWithOptions:(int)arg1;
- (void)generateCandidates;
- (_Bool)canShowAppConnections;
- (_Bool)delegateSuggestionsForCurrentInput;
- (id)autocorrectionRecordForWord:(id)arg1;
- (void)autocorrectionAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)fadeAutocorrectPrompt;
- (void)animateAutocorrectionToRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2;
- (void)animateAutocorrectionToText:(id)arg1 fromRect:(struct CGRect)arg2;
- (_Bool)applyAutocorrection:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 correctionRects:(id)arg2;
- (id)autocorrectPromptRectsForInput:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 executionContext:(id)arg2;
- (void)updateAutocorrectPrompt:(id)arg1;
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect)arg1 lastDelegateRect:(struct CGRect)arg2;
- (id)_rangeForAutocorrectionText:(id)arg1;
- (void)clearAutocorrectPromptTimer;
- (void)touchAutocorrectPromptTimer;
- (void)sendCallbacksForPostCorrectionsRemoval;
- (void)sendCallbacksForPreCorrectionsDisplay;
- (struct CGRect)convertRectToAutocorrectRect:(struct CGRect)arg1 delegateView:(id)arg2 container:(id)arg3;
- (void)updateTextCandidateView;
- (struct CGRect)correctionRect;
- (id)inputOverlayContainer;
- (void)_updateKeyboardConfigurations;
- (id)updatedKeyBehaviors;
- (id)updateKeyBehaviors:(id)arg1 withBehaviors:(id)arg2 forState:(id)arg3;
- (id)_keyboardBehaviorState;
- (void)performKeyBehaviorCommitInline;
- (void)performKeyBehaviorConfirmFirstCandidate;
- (void)performKeyBehaviorConfirm;
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(id)arg2;
- (void)_nop;
- (_Bool)shouldShowDictationKey;
- (_Bool)shouldShowInternationalKey;
- (void)updateReturnKey:(_Bool)arg1;
- (void)updateReturnKey;
- (void)setReturnKeyEnabled:(_Bool)arg1;
- (_Bool)returnKeyEnabled;
- (id)returnKeyDisplayName;
- (int)returnKeyType;
- (_Bool)noContent;
- (void)setCandidates:(id)arg1;
- (void)removeAutocorrectPromptAndCandidateList;
- (void)removeCandidateList;
- (void)removeAutocorrectPrompt;
- (id)autocorrectPrompt;
- (void)setAutocorrectionList:(id)arg1;
- (void)setAutocorrection:(id)arg1;
- (void)responseContextDidChange;
- (_Bool)maximizing;
- (_Bool)isMinimized;
- (void)resizeCandidateBarWithDelta:(double)arg1;
- (void)updateCandidateDisplay;
- (_Bool)needsToDeferUpdateTextCandidateView;
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)arg1;
- (_Bool)displaysCandidates;
- (void)setCandidateList:(id)arg1;
- (void)processPayloadInfo:(id)arg1;
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2 forInput:(id)arg3;
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (void)replaceText:(id)arg1;
- (void)clearDelegate;
- (void)clearAnimations;
- (void)clearTransientState;
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1;
- (void)acceptRecentInput:(id)arg1;
- (void)removeRecentInput:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)clearRecentInput;
- (void)clearInputWithCandidatesCleared:(_Bool)arg1;
- (void)clearInput;
- (id)candidateList;
- (void)candidateListInvalidateSelection:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (void)revealHiddenCandidates;
- (void)jumpToCompositions;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidates;
- (void)completeAcceptCandidate:(id)arg1;
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)arg1;
- (void)acceptCurrentCandidateIfSelected;
- (void)setUserSelectedCurrentCandidate:(_Bool)arg1;
- (_Bool)userSelectedCurrentCandidate;
- (void)acceptFirstCandidate;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2 executionContext:(id)arg3;
- (id)acceptInlineCandidateForInput:(id)arg1;
- (id)acceptCurrentCandidateForInput:(id)arg1;
- (id)acceptInlineCandidate;
- (id)acceptCurrentCandidate;
- (void)handleDeletionForCandidate:(id)arg1;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2;
- (void)acceptCandidate:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1 executionContext:(id)arg2;
- (void)rejectAutocorrection:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1;
- (id)emojiCandidate:(id)arg1;
- (void)insertTextSuggestion:(id)arg1;
- (void)removeAutocorrection;
- (void)acceptAutocorrection;
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;
- (void)completeDeleteFromInput;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1 executionContext:(id)arg2;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1;
- (void)deleteFromInput;
- (void)didHandleWebKeyEvent;
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)arg1;
- (void)scheduleReplacementsAfterDeletionToEndOfWord;
- (void)moveSelectionToEndOfWord;
- (void)collapseSelectionAndAdjustByOffset:(long long)arg1;
- (void)collapseSelection;
- (_Bool)selectionIsEndOfWord;
- (_Bool)nextCharacterIsWordCharacter;
- (void)deleteOnceFromInputWithExecutionContext:(id)arg1;
- (void)updateLayoutAndSetShift;
- (_Bool)shouldEnableShiftForDeletedCharacter:(unsigned int)arg1;
- (void)movePhraseBoundaryToDirection:(long long)arg1 granularity:(long long)arg2;
- (unsigned long long)phraseBoundary;
- (void)didChangePhraseBoundary;
- (void)completeAddInputString:(id)arg1 generateCandidates:(_Bool)arg2;
- (void)completeAddInputString:(id)arg1;
- (void)addWordTerminator:(id)arg1 afterSpace:(_Bool)arg2 afterAcceptingCandidate:(id)arg3 elapsedTime:(double)arg4 executionContext:(id)arg5;
- (void)didApplyAutocorrection:(id)arg1 autocorrectPromptFrame:(struct CGRect)arg2;
- (_Bool)shouldApplyAcceptedAutocorrection:(id)arg1;
- (void)acceptAutocorrection:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (void)setDocumentStateForAutocorrection:(id)arg1;
- (void)syncInputManagerToAcceptedAutocorrection:(id)arg1 forInput:(id)arg2;
- (void)didAcceptAutocorrection:(id)arg1 wordTerminator:(id)arg2;
- (id)inputWordForTerminatorAtSelection;
- (void)acceptAutocorrectionForWordTerminator:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (id)acceptAutocorrectionForWordTerminator:(id)arg1;
- (void)addInputEvent:(id)arg1 executionContext:(id)arg2;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)removeSpaceAfterEmojiForInputString:(id)arg1;
- (_Bool)shouldAcceptCandidate:(id)arg1 beforeInputString:(id)arg2;
- (id)handleReplacement:(id)arg1 forSpaceAndInput:(id)arg2;
- (id)handleDeleteAutospaceForInputString:(id)arg1 afterSpace:(_Bool)arg2;
- (_Bool)shouldDeleteAutospaceBeforeTerminator:(id)arg1;
- (_Bool)willDoubleSpacePeriodForInputString:(id)arg1 afterSpace:(_Bool)arg2 elapsedTime:(double)arg3;
- (void)updateDoubleSpacePeriodStateForString:(id)arg1;
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)arg1;
- (id)inputEventForInputString:(id)arg1;
- (void)addInputString:(id)arg1 fromVariantKey:(_Bool)arg2;
- (void)addInputString:(id)arg1;
- (void)deleteBackward;
- (void)deleteForwardAndNotify:(_Bool)arg1;
- (void)updateKeyboardStateForDeletion;
- (void)deleteBackwardAndNotify:(_Bool)arg1;
- (void)moveCursorByAmount:(long long)arg1;
- (void)insertTextAfterSelection:(id)arg1;
- (void)updateKeyboardStateForInsertion:(id)arg1;
- (void)insertText:(id)arg1;
- (void)setPreviousInputString:(id)arg1;
- (_Bool)acceptInputString:(id)arg1;
- (void)handleStringInput:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (_Bool)handleTabWithShift:(_Bool)arg1 beforePublicKeyCommands:(_Bool)arg2;
- (_Bool)handleTabWithShift:(_Bool)arg1;
- (void)handleClearWithExecutionContext:(id)arg1;
- (void)handleClear;
- (void)handleClearWithInsertBeforeAdvance:(id)arg1;
- (_Bool)canHandleDelete;
- (void)handleDelete;
- (void)handleDeleteWithExecutionContext:(id)arg1;
- (void)handleDeleteAsRepeat:(_Bool)arg1 executionContext:(id)arg2;
- (void)setInputPoint:(struct CGPoint)arg1;
- (void)keyDeactivated;
- (void)keyActivated;
- (_Bool)shouldUsePinyinStyleRowNavigation;
- (_Bool)supportsNumberKeySelection;
- (_Bool)suppliesCompletions;
- (_Bool)usesAutocorrectionLists;
- (_Bool)accessibilityUsesExtendedKeyboardPredictionsEnabled;
- (void)setUsesCandidateSelection:(_Bool)arg1;
- (_Bool)usesCandidateSelection;
- (void)updateShowCandidateBar;
- (void)setShouldSkipCandidateSelection:(_Bool)arg1 userInitiated:(_Bool)arg2;
@property(nonatomic) _Bool shouldSkipCandidateSelection;
- (void)forceShiftUpdateIfKeyboardStateChanged;
- (void)forceShiftUpdate;
- (void)clearShiftState;
- (_Bool)isCapsLockSwitchEnabled;
- (_Bool)isCapsLockASCIIToggle;
- (_Bool)shiftLockedEnabled;
- (_Bool)isShiftLocked;
- (_Bool)isAutoShifted;
- (_Bool)isShifted;
- (void)setShiftLockedForced:(_Bool)arg1;
- (void)setShiftLocked:(_Bool)arg1;
- (void)setShiftNeedsUpdate;
- (void)setShiftPreventAutoshift:(_Bool)arg1;
- (void)setShift:(_Bool)arg1 autoshift:(_Bool)arg2;
- (void)setShift:(_Bool)arg1;
- (void)toggleShift;
- (void)setShiftOffIfNeeded;
- (_Bool)isSelectionAtSentenceAutoshiftBoundary;
- (void)updateStylingTraitsIfNeeded;
- (void)updateShiftState;
- (void)notifyShiftState;
- (void)updateInputManagerAutocapitalizationType;
- (void)recomputeActiveInputModesWithExtensions:(_Bool)arg1;
- (id)desirableInputModesWithExtensions:(_Bool)arg1;
- (_Bool)shouldSwitchInputMode:(id)arg1;
- (_Bool)shouldUseCarPlayModes;
- (void)releaseInputManagerIfInactive;
- (void)releaseInputManager;
- (void)setInputManagerFromCurrentInputMode;
@property(readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
- (void)removeAllDynamicDictionaries;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 granularity:(int)arg2 executionContext:(id)arg3;
- (void)performHitTestForTouchEvent:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1 delayed:(_Bool)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1;
- (void)generateReplacementsForString:(id)arg1 candidatesHandler:(CDUnknownBlockType)arg2 executionContext:(id)arg3;
- (void)handleAcceptedCandidate:(id)arg1 executionContext:(id)arg2;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 executionContext:(id)arg2;
- (void)generateAutocorrectionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)generateAutocorrectionWithExecutionContext:(id)arg1;
- (void)inputManagerDidGenerateCandidatesForRequest:(id)arg1 resultSet:(id)arg2;
- (void)cancelCandidateRequests;
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange)arg1 selectedCandidate:(id)arg2;
- (void)generateCandidatesAsynchronously;
- (void)performKeyboardOutput:(id)arg1;
- (void)performKeyboardOutputInfo:(id)arg1;
- (void)_touchIDDismissed;
- (void)_touchIDPresented;
- (void)replaceAllTextInResponder:(id)arg1 withText:(id)arg2;
- (void)updateKeyboardOutput:(id)arg1 withInputForSmartPunctuation:(id)arg2 keyboardConfiguration:(id)arg3;
- (void)handleKeyboardInput:(id)arg1 executionContext:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)syncKeyboardToConfiguration:(id)arg1;
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)arg1;
- (void)syncInputManagerToKeyboardState;
@property(readonly, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)selectionDidChange:(id)arg1;
- (void)completeUpdateForChangedSelection:(_Bool)arg1;
- (_Bool)shouldGenerateCandidatesAfterSelectionChange;
- (void)updateForChangedSelectionWithExecutionContext:(id)arg1;
- (void)updateForChangedSelection;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)selectionWillChange:(id)arg1;
- (void)prepareForSelectionChange;
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)arg1;
- (void)syncDocumentStateToInputDelegate;
- (_Bool)cursorIsAtEndOfMarkedText;
- (id)inputStringFromPhraseBoundary;
- (id)searchStringForMarkedText;
- (id)markedTextOverlay;
- (id)inputForMarkedText;
- (id)markedText;
- (_Bool)hasEditableMarkedText;
- (_Bool)hasMarkedText;
- (void)unmarkText:(id)arg1;
- (void)unmarkText;
- (void)clearInputForMarkedText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4;
- (struct CGSize)stretchFactor;
- (int)_clipCornersOfView:(id)arg1;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (void)didMoveToSuperview;
- (void)willMoveToWindow:(id)arg1;
- (void)_updateExternalDeviceInputSettingForWindow:(id)arg1;
- (_Bool)transitionInProgress;
- (void)setTwoFingerTapTimestamp:(double)arg1;
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;
@property(readonly, nonatomic) double timestampOfLastTouchesEnded;
- (void)updateLayout;
- (void)finishLayoutChangeWithArguments:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowCandidateBar;
- (_Bool)shouldShowCandidateBarIfReceivedCandidatesInCurrentInputMode:(_Bool)arg1;
- (_Bool)currentKeyboardTraitsAllowCandidateBar;
- (struct CGRect)subtractKeyboardFrameFromRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)geometryChangeDone:(_Bool)arg1;
- (void)prepareForGeometryChange;
- (void)releaseSuppressUpdateCandidateView;
- (void)updateLayoutIfNeeded;
- (_Bool)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2 beforePublicKeyCommands:(_Bool)arg3;
- (_Bool)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2;
- (_Bool)shouldAllowRepeatEvent:(id)arg1;
- (void)handleObserverCallback;
- (void)updateObserverState;
- (void)setChangeNotificationDisabled:(_Bool)arg1;
- (_Bool)changeNotificationDisabled;
- (void)setChanged;
- (void)textFrameChanged:(id)arg1;
- (void)callChanged;
- (void)callChangedSelection;
- (_Bool)callShouldDeleteWithWordCountForRapidDelete:(int)arg1 characterCountForRapidDelete:(int)arg2;
- (_Bool)shouldRapidDeleteWithDelegate;
- (_Bool)shouldRapidDelete;
- (_Bool)usesAutoDeleteWord;
- (_Bool)callShouldReplaceExtendedRange:(long long)arg1 withText:(id)arg2 includeMarkedText:(_Bool)arg3;
- (_Bool)callShouldInsertText:(id)arg1 onDelegate:(id)arg2;
- (_Bool)callShouldInsertText:(id)arg1;
- (void)_completePerformInputViewControllerOutput:(id)arg1 executionContext:(id)arg2;
- (void)_processInputViewControllerKeyboardOutput:(id)arg1 executionContext:(id)arg2;
- (void)_updateInputViewControllerOutput:(id)arg1 forKeyboardOutput:(id)arg2;
- (_Bool)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)arg1;
- (void)setSuggestions:(id)arg1;
- (void)handlePredictionViewIfNeeded;
- (void)disablePredictionViewIfNeeded;
- (void)clearDisablePredictionViewTimer;
@property(readonly, nonatomic) _Bool isDefaultPrediction;
- (void)enable;
- (id)textInputTraits;
- (void)setDefaultTextInputTraits:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)finishTextChanged;
- (void)textChanged:(id)arg1 executionContext:(id)arg2;
- (void)textChanged:(id)arg1;
- (void)layoutHasChanged;
- (void)textWillChange:(id)arg1;
- (void)storeDelegateConformance;
- (_Bool)autocorrectSpellingEnabled;
- (void)setAutocorrectSpellingEnabled:(_Bool)arg1;
- (_Bool)delegateSupportsCorrectionUI;
- (_Bool)delegateIsSMSTextView;
- (void)didSetDelegate;
- (void)setDelegate:(id)arg1 force:(_Bool)arg2;
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;
- (void)updateAssistantBar;
- (id)documentIdentifierForInputDelegate:(id)arg1;
@property(readonly, nonatomic) UIResponder *delegateAsResponder;
@property(readonly, nonatomic) UIResponder *privateKeyInputDelegate;
@property(readonly, nonatomic) UIResponder *asynchronousInputDelegate;
@property(readonly, nonatomic) UIResponder<UITextInput> *inputDelegate;
@property(readonly, nonatomic) UIResponder *privateInputDelegate;
@property(readonly, nonatomic) id legacyInputDelegate;
- (void)setTextSelectionControllerFromDelegate;
- (void)takeTextInputTraitsFromDelegate;
- (void)setCorrectionLearningAllowed:(_Bool)arg1;
- (void)finishLayoutToCurrentInterfaceOrientation;
- (void)updateLayoutToCurrentInterfaceOrientation;
- (void)prepareLayoutForInterfaceOrientation:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateLayoutIfNecessary;
- (void)_updateSoundPreheatingForWindow:(id)arg1;
- (void)setInputModeToNextASCIICapableInPreferredList;
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)showInternationalKeyInfoAlertIfNeeded;
- (void)showInformationalAlertIfNeededForReason:(int)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)fadeAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1 preserveIfPossible:(_Bool)arg2;
- (void)setKeyboardInputModeFromPreferences:(id)arg1;
- (void)prepareKeyboardInputModeFromPreferences:(id)arg1;
- (void)setInputModeFromPreferences;
- (void)finishSetInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)finishSetExtensionInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)finishSetKeyboardInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)reinitializeAfterInputModeSwitch:(_Bool)arg1;
- (void)updateForHandBiasChange;
- (void)updatePredictionView;
- (void)updateSmartPunctuationOptionsForLocaleIdentifier:(id)arg1;
- (void)cleanUpBeforeInputModeSwitch;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 force:(_Bool)arg4 executionContext:(id)arg5;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;
- (void)reloadCurrentInputMode;
- (void)postInputViewControllerShouldUpdateNotification:(id)arg1;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 force:(_Bool)arg3;
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2;
- (void)setInputMode:(id)arg1;
- (_Bool)shiftLockPreference;
- (void)setHardwareKeyboardsSeenPreference:(id)arg1;
- (id)hardwareKeyboardsSeenPreference;
- (void)setShouldUpdateCacheOnInputModesChange:(_Bool)arg1;
- (void)updateInputModeLastChosenPreference;
- (id)inputModeLastUsedPreference;
- (id)inputModePreference;
- (void)saveInputModesPreference:(id)arg1;
- (void)setAutomaticMinimizationEnabled:(_Bool)arg1;
- (_Bool)automaticMinimizationEnabled;
- (_Bool)keyboardsExpandedPreference;
- (id)UILanguagePreference;
- (_Bool)doubleSpacePeriodPreference;
@property(readonly, nonatomic) TISmartPunctuationController *smartPunctuationController; // @synthesize smartPunctuationController=m_smartPunctuationController;
- (_Bool)checkSpellingPreferenceForTraits;
- (_Bool)checkSpellingPreference;
- (_Bool)smartInsertDeleteIsEnabled;
- (_Bool)autocapitalizationPreference;
- (_Bool)candidateSelectionPredictionForTraits;
- (_Bool)disableInputBars;
- (_Bool)canOfferPredictionsForTraits;
- (_Bool)predictionPreferenceForTraits;
- (_Bool)predictionFromPreference;
- (_Bool)predictionForTraits;
- (_Bool)predictionForTraitsWithForceEnable:(_Bool)arg1;
- (_Bool)autocorrectionPreferenceForTraits;
- (_Bool)keyboardIsKeyPad;
- (_Bool)autocorrectionPreference;
- (_Bool)performanceLoggingPreference;
- (void)cancelSplitTransition;
- (_Bool)hideAccessoryViewsDuringSplit;
- (void)setSplitProgress:(double)arg1;
- (void)setInSplitKeyboardMode:(_Bool)arg1;
@property(readonly, nonatomic) _Bool splitTransitionInProgress;
@property(readonly) unsigned long long minimumTouchesForTranslation;
@property _Bool rivenSplitLock;
- (void)refreshRivenPreferences;
- (struct CGRect)dragGestureRectInView:(id)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
@property(readonly) _Bool centerFilled;
- (void)defaultsDidChange;
- (void)selectionScrolling:(id)arg1;
- (void)applicationResumedEventsOnly:(id)arg1;
- (void)applicationSuspendedEventsOnly:(id)arg1;
- (void)removeFromSuperview;
- (void)deactivateLayout;
- (void)clearLayouts;
@property(retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;
- (void)clearAutofillStates;
- (void)clearAutofillGroup;
- (_Bool)needAutofillCandidate:(id)arg1;
- (_Bool)delegateAlreadyInAutofillGroup;
- (id)_autofillContextForInputDelegate:(id)arg1;
- (long long)doTraits:(id)arg1 matchTextContentType:(id)arg2;
- (void)setPendingAutofillIndex:(long long)arg1;
- (void)refreshAutofillStateIfNecessary;
- (void)generateAutofillCandidate;
- (_Bool)needAutofill;
- (_Bool)textInputTraitsNeedAutofill;
- (void)refreshKeyboardState;
- (void)updateInputManagerMode;
- (_Bool)shouldSwitchFromInputManagerMode:(id)arg1 toInputMode:(id)arg2;
- (id)updateSecureCandidateRenderTraits;
- (unsigned long long)maxNumberOfProactiveCells;
- (id)layoutState;
- (void)dealloc;
- (void)detach;
- (void)keyboardDidHide:(id)arg1;
- (void)delayedInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setCapsLockIfNeeded;
- (void)setCapsLockSign;
@property(nonatomic) _Bool hardwareKeyboardIsSeen;
- (void)callLayoutUpdateRecentInputs;
- (void)callLayoutUpdateAllLocalizedKeys;
- (void)callLayoutUpdateLocalizedKeys;
- (void)callLayoutLongPressAction;
- (void)callLayoutSetAutoshift:(_Bool)arg1;
- (void)callLayoutSetShift:(_Bool)arg1;
- (_Bool)callLayoutIsShiftKeyBeingHeld;
- (_Bool)callLayoutIsShiftKeyPlaneChooser;
- (_Bool)callLayoutIgnoresShiftState;
- (_Bool)callLayoutUsesAutoShift;
- (void)callLayoutUpdateReturnKey;
- (void)timeElapsed:(unsigned int)arg1 message:(id)arg2;
- (void)timeMark:(unsigned int)arg1;
- (void)timeMark:(unsigned int)arg1 message:(id)arg2;
- (void)_clearAutofillGroup;
- (_Bool)_needAutofillCandidate:(id)arg1;
- (void)logHandwritingData;
- (_Bool)isAutoDeleteActive;
- (void)testAutocorrectionPromptWithCorrection:(id)arg1;
- (int)textInputChangingCount;
- (_Bool)_isShowingCandidateUIWithAvailableCandidates;
- (void)updateFromTextInputTraits;
- (_Bool)hasAutoRepeat;
- (void)_setShiftLockedEnabled:(_Bool)arg1;
- (void)_setInputManager:(id)arg1;
- (void)createTypoTrackerReport;
- (void)composeTypologyRadar;
- (double)lastTouchDownTimestamp;
- (_Bool)_activeCandidateViewNeedsBackdrop;
- (void)lookUpResponderChainForCustomInputView;
- (void)moveCursorRightShifted:(_Bool)arg1;
- (void)moveCursorLeftShifted:(_Bool)arg1;
- (id)_autofillContext;
- (id)internationalKeyDisplayStringOnEmojiKeyboard;
- (_Bool)globeKeyDisplaysAsEmojiKey;
- (void)acceptAutocorrectionAndEndComposition;
- (double)biasedKeyboardWidthRatio;
- (long long)currentHandBias;
- (_Bool)allowsReachableKeyboard;
- (id)_layout;
- (_Bool)isUsingDictationLayout;
- (void)setTextInputChangesIgnored:(_Bool)arg1;
- (void)finishSplitTransitionWithProgress:(double)arg1;
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;
- (id)textInteractionAssistant;
@property(readonly, nonatomic) UITextSelectionView *selectionView;
- (void)setInitialDirection;
- (_Bool)_shouldMinimizeForHardwareKeyboard;
- (void)updateKeyboardConfigurations;
- (void)clearLanguageIndicator;
- (_Bool)keyboardDrawsOpaque;
- (void)clearExcessKeyboardMemory;
- (void)_tagTouchForTypingMenu:(unsigned int)arg1;
- (void)_requestInputManagerSync;
- (void)_performInputViewControllerOutput:(id)arg1;
- (_Bool)_needsCandidates;
- (void)_setNeedsCandidates:(_Bool)arg1;
- (long long)_positionInCandidateList:(id)arg1;
- (_Bool)_hasCandidates;
- (id)_getAutocorrection;
- (void)_setAutocorrects:(_Bool)arg1;
- (id)_getLocalizedInputMode;
- (id)_getCurrentKeyboardName;
- (id)_getCurrentKeyplaneName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


#endif
