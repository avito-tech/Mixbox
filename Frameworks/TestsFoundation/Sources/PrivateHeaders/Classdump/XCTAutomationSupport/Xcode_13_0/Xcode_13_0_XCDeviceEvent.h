#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 150000 && __IPHONE_OS_VERSION_MAX_ALLOWED < 160000

#import "Xcode_13_0_XCTAutomationSupport_CDStructures.h"
#import "Xcode_13_0_SharedHeader.h"
#import <Foundation/Foundation.h>

//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@interface XCDeviceEvent : NSObject <NSSecureCoding>
{
    unsigned char _buttonMask;
    unsigned int _eventPage;
    unsigned int _usage;
    long long _displayID;
    double _duration;
    double _rotation;
    long long _clicks;
    unsigned long long _type;
    struct CGVector _offset;
}

+ (id)deviceEventWithDisplayID:(long long)arg1 knobRotation:(long long)arg2 duration:(double)arg3;
+ (id)deviceEventWithDisplayID:(long long)arg1 knobOffset:(struct CGVector)arg2 knobButtons:(unsigned char)arg3 duration:(double)arg4;
+ (id)deviceEventForDigitalCrownRotation:(double)arg1 velocity:(double)arg2;
+ (id)deviceEventWithDisplayID:(long long)arg1 page:(unsigned int)arg2 usage:(unsigned int)arg3 duration:(double)arg4;
+ (id)deviceEventWithPage:(unsigned int)arg1 usage:(unsigned int)arg2 duration:(double)arg3;
+ (_Bool)supportsSecureCoding;
@property struct CGVector offset; // @synthesize offset=_offset;
@property unsigned char buttonMask; // @synthesize buttonMask=_buttonMask;
@property unsigned long long type; // @synthesize type=_type;
@property long long clicks; // @synthesize clicks=_clicks;
@property double rotation; // @synthesize rotation=_rotation;
@property double duration; // @synthesize duration=_duration;
@property unsigned int usage; // @synthesize usage=_usage;
@property unsigned int eventPage; // @synthesize eventPage=_eventPage;
@property long long displayID; // @synthesize displayID=_displayID;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) _Bool isButtonHoldEvent;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

#endif