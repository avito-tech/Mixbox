#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 170000 && __IPHONE_OS_VERSION_MAX_ALLOWED < 180000

#import "Xcode_15_0_XCUIAutomation_CDStructures.h"
#import "Xcode_15_0_SharedHeader.h"
#import "Xcode_15_0_XCUIApplicationPlatformServicesProviderDelegate.h"
#import "Xcode_15_0_XCUIApplicationProcessTracker.h"
#import <Foundation/Foundation.h>

@protocol XCUIPlatformApplicationServicesProviding;

@class XCUIApplicationImpl, XCUIApplicationProcess, XCUIApplicationRegistry;

//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@protocol XCUIApplicationMonitor <NSObject, XCUIApplicationProcessTracker, XCUIApplicationPlatformServicesProviderDelegate>
@property(readonly) NSSet *unsupportedBundleIdentifiersForAutomationSessions;
@property(retain) XCUIApplicationRegistry *applicationRegistry;
@property(readonly) _Bool providesClientStateUpdates;
- (void)acquireBackgroundAssertionForPID:(int)arg1 reply:(void (^)(_Bool))arg2;
- (void)waitForUnrequestedTerminationOfLaunchedApplicationsWithTimeout:(double)arg1;
- (void)terminationTrackedForApplicationProcess:(XCUIApplicationProcess *)arg1;
- (void)launchRequestedForApplicationProcess:(XCUIApplicationProcess *)arg1;
- (void)terminateApplicationProcess:(XCUIApplicationProcess *)arg1 withToken:(id)arg2;
- (XCUIApplicationImpl *)applicationImplementationForApplicationAtPath:(NSString *)arg1 bundleID:(NSString *)arg2;
- (void)processWithToken:(NSNumber *)arg1 exitedWithStatus:(int)arg2;
- (void)stopTrackingProcessWithToken:(NSNumber *)arg1;
- (void)crashInProcessWithBundleID:(NSString *)arg1 path:(NSString *)arg2 pid:(int)arg3 symbol:(NSString *)arg4;
- (void)resetTrackedAppStates;
- (void)replacePlatformServicesProvider:(id <XCUIPlatformApplicationServicesProviding>)arg1;
@end

#endif
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 170000 && __IPHONE_OS_VERSION_MAX_ALLOWED < 180000

#import "Xcode_15_0_XCUIAutomation_CDStructures.h"
#import "Xcode_15_0_SharedHeader.h"
#import "Xcode_15_0_XCUIApplicationMonitor.h"
#import <Foundation/Foundation.h>

@protocol XCUIDevice, XCUIPlatformApplicationServicesProviding;

@class XCTestConfiguration, XCUIApplicationImplDepot, XCUIApplicationRegistry;

//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@interface XCUIApplicationMonitor : NSObject <XCUIApplicationMonitor>
{
    XCUIApplicationRegistry *_applicationRegistry;
    NSSet *_unsupportedBundleIdentifiersForAutomationSessions;
    id <XCUIDevice> _device;
    id <XCUIPlatformApplicationServicesProviding> _platformServicesProvider;
    XCTestConfiguration *_testConfiguration;
    double _crashReportWaitInterval;
    NSObject *_queue;
    XCUIApplicationImplDepot *_applicationImplDepot;
    NSMutableSet *_trackedBundleIDs;
    NSMutableDictionary *_applicationProcessesForPID;
    NSMutableDictionary *_applicationProcessesForToken;
    NSMutableSet *_launchedApplications;
    NSUUID *_appLaunchSignpostsToken;
    NSMapTable *_applicationsToResponsiveSignpostExpectations;
}

+ (void)initialize;
@property(readonly) NSMapTable *applicationsToResponsiveSignpostExpectations; // @synthesize applicationsToResponsiveSignpostExpectations=_applicationsToResponsiveSignpostExpectations;
@property(copy) NSUUID *appLaunchSignpostsToken; // @synthesize appLaunchSignpostsToken=_appLaunchSignpostsToken;
@property(readonly, copy) NSMutableSet *launchedApplications; // @synthesize launchedApplications=_launchedApplications;
@property(readonly, copy) NSMutableDictionary *applicationProcessesForToken; // @synthesize applicationProcessesForToken=_applicationProcessesForToken;
@property(readonly, copy) NSMutableDictionary *applicationProcessesForPID; // @synthesize applicationProcessesForPID=_applicationProcessesForPID;
@property(readonly, copy) NSMutableSet *trackedBundleIDs; // @synthesize trackedBundleIDs=_trackedBundleIDs;
@property(readonly, copy) XCUIApplicationImplDepot *applicationImplDepot; // @synthesize applicationImplDepot=_applicationImplDepot;
@property(retain) NSObject *queue; // @synthesize queue=_queue;
@property double crashReportWaitInterval; // @synthesize crashReportWaitInterval=_crashReportWaitInterval;
@property(readonly) XCTestConfiguration *testConfiguration; // @synthesize testConfiguration=_testConfiguration;
@property(readonly) id <XCUIPlatformApplicationServicesProviding> platformServicesProvider; // @synthesize platformServicesProvider=_platformServicesProvider;
@property(readonly) __weak id <XCUIDevice> device; // @synthesize device=_device;
@property(retain) XCUIApplicationRegistry *applicationRegistry; // @synthesize applicationRegistry=_applicationRegistry;
@property(readonly) NSSet *unsupportedBundleIdentifiersForAutomationSessions; // @synthesize unsupportedBundleIdentifiersForAutomationSessions=_unsupportedBundleIdentifiersForAutomationSessions;
- (void)acquireBackgroundAssertionForPID:(int)arg1 reply:(CDUnknownBlockType)arg2;
- (void)updatedInterfaceOrientation:(long long)arg1;
- (void)updatedDeviceOrientation:(long long)arg1;
- (void)updatedApplicationStateSnapshot:(id)arg1;
- (void)_setIsTrackingForBundleID:(id)arg1;
- (_Bool)_isTrackingBundleID:(id)arg1;
- (void)processWithToken:(id)arg1 exitedWithStatus:(int)arg2;
- (void)stopTrackingProcessWithToken:(id)arg1;
- (void)crashInProcessWithBundleID:(id)arg1 path:(id)arg2 pid:(int)arg3 symbol:(id)arg4;
- (void)waitForUnrequestedTerminationOfLaunchedApplicationsWithTimeout:(double)arg1;
- (void)_waitForCrashReportOrCleanExitStatusOfApp:(id)arg1;
- (id)_appFromSet:(id)arg1 thatTransitionedToNotRunningDuringTimeInterval:(double)arg2;
- (id)firstFramePresentationResponsiveSignpostExpectationForApplication:(id)arg1;
- (void)_handleFirstFramePresentationResponsiveSignpost:(id)arg1;
- (void)terminationTrackedForApplicationProcess:(id)arg1;
- (void)launchRequestedForApplicationProcess:(id)arg1;
- (void)_terminateApplicationProcess:(id)arg1;
- (void)terminateApplicationProcess:(id)arg1 withToken:(id)arg2;
- (id)monitoredApplicationWithProcessIdentifier:(int)arg1;
@property(readonly) _Bool providesClientStateUpdates;
- (void)setApplicationProcess:(id)arg1 forToken:(id)arg2;
- (id)applicationProcessWithToken:(id)arg1;
- (void)setApplicationProcess:(id)arg1 forPID:(int)arg2;
- (id)applicationProcessWithPID:(int)arg1;
- (id)applicationImplementationForApplicationAtPath:(id)arg1 bundleID:(id)arg2;
- (void)resetTrackedAppStates;
- (id)initWithDevice:(id)arg1 platformServicesProvider:(id)arg2 testConfiguration:(id)arg3;
- (void)replacePlatformServicesProvider:(id)arg1;
- (id)initWithDevice:(id)arg1 platformServicesProvider:(id)arg2;

// Remaining properties

@end

#endif